[{"/Users/macbook/Dev/practice-react/todolist/todo-app/src/index.js":"1","/Users/macbook/Dev/practice-react/todolist/todo-app/src/App.js":"2","/Users/macbook/Dev/practice-react/todolist/todo-app/src/reportWebVitals.js":"3","/Users/macbook/Dev/practice-react/todolist/todo-app/src/components/TodoList.js":"4","/Users/macbook/Dev/practice-react/todolist/todo-app/src/components/TodoItem.js":"5","/Users/macbook/Dev/practice-react/todolist/todo-app/src/components/CategoryTitle.js":"6","/Users/macbook/Dev/practice-react/todolist/todo-app/src/components/AddItem.js":"7","/Users/macbook/Dev/practice-react/todolist/todo-app/src/components/TodoForm.js":"8"},{"size":500,"mtime":1610786710414,"results":"9","hashOfConfig":"10"},{"size":3048,"mtime":1610902457510,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610786710415,"results":"12","hashOfConfig":"10"},{"size":700,"mtime":1610898220504,"results":"13","hashOfConfig":"10"},{"size":469,"mtime":1610899955767,"results":"14","hashOfConfig":"10"},{"size":228,"mtime":1610813223516,"results":"15","hashOfConfig":"10"},{"size":336,"mtime":1610894768220,"results":"16","hashOfConfig":"10"},{"size":1369,"mtime":1610944892518,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ihnwtq",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbook/Dev/practice-react/todolist/todo-app/src/index.js",[],["36","37"],"/Users/macbook/Dev/practice-react/todolist/todo-app/src/App.js",["38"],"import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport TodoList from \"./components/TodoList\";\nimport AddItem from \"./components/AddItem\";\nimport TodoForm from \"./components/TodoForm\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [\n        { id: nanoid(), title: \"phone my mom\", isDone: false },\n        { id: nanoid(), title: \"Learning React\", isDone: false },\n        { id: nanoid(), title: \"Go to Shopping\", isDone: false },\n        { id: nanoid(), title: \"working out\", isDone: false },\n        { id: nanoid(), title: \"go to sleep\", isDone: false },\n      ],\n      showInput: false,\n    };\n  }\n\n  handleClickItems = (id) => {\n    const cloneTodos = this.state.todos;\n\n    cloneTodos.map((todo) => {\n      // console.log(todo);\n      if (todo.id === id) {\n        // console.log(\"check\", todo.id);\n        todo.isDone = !todo.isDone;\n      }\n    });\n    this.setState({\n      todos: cloneTodos,\n    });\n  };\n\n  handleCreateItem = (title) => {\n    const cloneTodos = this.state.todos;\n    cloneTodos.push({\n      // to push an object form\n      id: nanoid(),\n      title,\n      isDone: false,\n    });\n\n    this.setState({\n      todos: cloneTodos,\n      showInput: false,\n    });\n  };\n\n  handleRemoveItem = (id) => {\n    const cloneTodos = this.state.todos;\n    let index = cloneTodos.findIndex((todo) => todo.id === id); // remove element by finding index of element\n    console.log(index);\n\n    cloneTodos.splice(index, 1);\n\n    this.setState({\n      todos: cloneTodos, // change todos array after remove element\n    });\n  };\n\n  render() {\n    const completeTodos = this.state.todos.filter(\n      (completeItem) => completeItem.isDone === true\n    );\n    // console.log(completeTodos);\n\n    const incompleteTodos = this.state.todos.filter(\n      (inCompleteItem) => inCompleteItem.isDone === false\n    );\n    // console.log(incompleteTodos);\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <i className=\"fas fa-bars\"></i>\n          <header>dailylist</header>\n        </div>\n        {/* condition to display UI */}\n        {this.state.todos.length > 0 ? (\n          <div>\n            <TodoList\n              todos={incompleteTodos}\n              title={\"upcoming\"}\n              onClick={this.handleClickItems}\n              onDelete={this.handleRemoveItem}\n            />\n            <TodoList\n              todos={completeTodos}\n              title={\"finished\"}\n              onClick={this.handleClickItems}\n              onDelete={this.handleRemoveItem}\n            />\n          </div>\n        ) : (\n          <div className=\"empty-list\">\n            <img src=\"../img/empty.svg\" alt=\"pic-1\" width={400} height={400} />\n            <p>Empty list</p>\n          </div>\n        )}\n\n        {/* input value  */}\n        {this.state.showInput && <TodoForm addItem={this.handleCreateItem} />}\n\n        <AddItem onClick={() => this.setState({ showInput: true })} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/macbook/Dev/practice-react/todolist/todo-app/src/reportWebVitals.js",[],"/Users/macbook/Dev/practice-react/todolist/todo-app/src/components/TodoList.js",[],"/Users/macbook/Dev/practice-react/todolist/todo-app/src/components/TodoItem.js",[],"/Users/macbook/Dev/practice-react/todolist/todo-app/src/components/CategoryTitle.js",[],"/Users/macbook/Dev/practice-react/todolist/todo-app/src/components/AddItem.js",[],"/Users/macbook/Dev/practice-react/todolist/todo-app/src/components/TodoForm.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":28,"column":27,"nodeType":"45","messageId":"46","endLine":28,"endColumn":29},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]